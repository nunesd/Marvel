{"version":3,"sources":["assets/marvel-logo.svg","pages/home/Header/index.tsx","pages/home/Body/Header/hooks.ts","pages/home/Body/Header/index.tsx","pages/home/Body/Comics/Comic/index.tsx","pages/home/Body/Comics/index.tsx","pages/home/Body/index.tsx","api/index.ts","pages/home/utils.ts","pages/home/index.tsx","pages/home/hooks.ts","index.tsx"],"names":["Header","className","src","logo","alt","useDebounce","value","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","onSearchPerTitle","onSearchPerYear","searchText","setSearchText","searchYear","setSearchYear","firstLoad","setFirstLoad","debouncedText","debouncedYear","onChangeInput","type","NaN","Number","toString","length","undefined","placeholder","onChange","target","Comic","isDetail","onClick","comic","id","img","title","printPrice","digitalPrice","data-testid","Comics","comics","isOpen","setisOpen","modalComic","setModalComic","onClickComic","toggleModal","map","onRequestClose","contentLabel","Body","onSeeMore","canSeeMore","publicKey","privateKey","time","url","process","PUBLIC_KEY","REACT_APP_PUBLIC_KEY","PRIVATE_KEY","REACT_APP_PRIVATE_KEY","timestamp","Date","hash","md5","create","update","axios","get","baseURL","params","ts","apikey","hex","timeout","method","responseType","getUrl","limit","offset","startYear","getFormattedComics","results","item","thumbnail","path","extension","prices","find","price","Home","props","size","total","state","setState","fetchData","a","api","data","fetchComics","newComics","fetchMoreComics","useComics","text","year","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.627f4581.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marvel-logo.70c9f7c4.svg\";","import React from 'react';\r\n\r\nimport logo from '../../../assets/marvel-logo.svg';\r\n\r\nimport './styles.css';\r\n\r\nconst Header = (): JSX.Element => {\r\n  return (\r\n    <div className=\"header\">\r\n      <img src={logo} alt=\"Logo da Marvel\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nconst useDebounce = (value: string): string => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useDebounce from './hooks';\r\n\r\nimport { HeaderType } from './types';\r\n\r\nimport './styles.css';\r\n\r\nconst Header = ({\r\n  onSearchPerTitle,\r\n  onSearchPerYear,\r\n}: HeaderType): JSX.Element => {\r\n  const [searchText, setSearchText] = useState<string>('');\r\n  const [searchYear, setSearchYear] = useState<string>('');\r\n  const [firstLoad, setFirstLoad] = useState<boolean>(false);\r\n  const debouncedText = useDebounce(searchText);\r\n  const debouncedYear = useDebounce(searchYear);\r\n\r\n  const onChangeInput = (value: string, type: 'text' | 'year') => {\r\n    type === 'year' ? setSearchYear(value) : setSearchText(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFirstLoad(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (firstLoad) {\r\n      onSearchPerYear(\r\n        Number(debouncedYear) === NaN && debouncedYear.toString().length\r\n          ? undefined\r\n          : Number(debouncedYear),\r\n      );\r\n    }\r\n  }, [debouncedYear]);\r\n\r\n  useEffect(() => {\r\n    if (firstLoad) {\r\n      onSearchPerTitle(debouncedText);\r\n    }\r\n  }, [debouncedText]);\r\n\r\n  return (\r\n    <header className=\"search\">\r\n      <input\r\n        type=\"text\"\r\n        value={searchText}\r\n        placeholder=\"Pesquisar por título\"\r\n        onChange={({ target: { value } }) => {\r\n          onChangeInput(value, 'text');\r\n        }}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={searchYear}\r\n        placeholder=\"Pesquisar por ano\"\r\n        onChange={({ target: { value } }) => onChangeInput(value, 'year')}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport { ComicType } from './types';\r\n\r\nimport './styles.css';\r\n\r\nconst Comic = ({ isDetail, onClick, ...comic }: ComicType): JSX.Element => {\r\n  const { id, img, title, printPrice, digitalPrice } = comic;\r\n\r\n  return (\r\n    <div\r\n      className={`comic-container${!isDetail ? ' list' : ''}`}\r\n      data-testid={`comic-container-${id}`}\r\n      onClick={() => onClick && onClick(comic)}\r\n    >\r\n      <img src={img} alt={title} />\r\n      <h2>{title}</h2>\r\n      {isDetail && (\r\n        <div className=\"paragraphs\">\r\n          <p>Identificador: {id}</p>\r\n\r\n          <p>\r\n            Preço de impressão:{' '}\r\n            {printPrice ? `USD ${printPrice}` : 'indefinido'}\r\n          </p>\r\n\r\n          <p>\r\n            Preço digital: {digitalPrice ? `USD ${digitalPrice}` : 'indefinido'}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comic;\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nimport Comic from './Comic';\r\n\r\nimport { ComicsType } from './types';\r\nimport { ComicDataType } from './Comic/types';\r\n\r\nimport './styles.css';\r\n\r\nconst Comics = ({ comics }: ComicsType): JSX.Element => {\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [modalComic, setModalComic] = useState<ComicDataType | undefined>();\r\n\r\n  const onClickComic = (comic: ComicDataType) => {\r\n    setModalComic(comic);\r\n    toggleModal(true);\r\n  };\r\n\r\n  const toggleModal = (value: boolean) => {\r\n    setisOpen(value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`comics-container${!comics?.length ? ' empty' : ''}`}\r\n      data-testid={comics?.length ? 'comics-container' : 'empty'}\r\n    >\r\n      {comics?.length ? (\r\n        comics.map(comic => (\r\n          <Comic\r\n            key={comic.id}\r\n            {...comic}\r\n            isDetail={false}\r\n            onClick={onClickComic}\r\n          />\r\n        ))\r\n      ) : (\r\n        <h3>Não há quadrinhos disponíveis</h3>\r\n      )}\r\n      <Modal\r\n        isOpen={isOpen}\r\n        onRequestClose={() => toggleModal(false)}\r\n        contentLabel=\"detalhe do quadrinho\"\r\n      >\r\n        {modalComic && (\r\n          <Comic {...modalComic} isDetail onClick={onClickComic} />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comics;\r\n","import React from 'react';\r\n\r\nimport Header from './Header';\r\nimport Comics from './Comics';\r\n\r\nimport { BodyProps } from './types';\r\n\r\nimport './styles.css';\r\n\r\nconst Body = ({\r\n  onSearchPerTitle,\r\n  onSearchPerYear,\r\n  onSeeMore,\r\n  comics,\r\n  canSeeMore,\r\n}: BodyProps): JSX.Element => {\r\n  return (\r\n    <section className=\"body-container\">\r\n      <Header\r\n        onSearchPerTitle={onSearchPerTitle}\r\n        onSearchPerYear={onSearchPerYear}\r\n      />\r\n      <Comics comics={comics} />\r\n      <div className=\"button-container\">\r\n        {!!comics?.length && canSeeMore && (\r\n          <button onClick={onSeeMore}>Ver Mais</button>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import axios, { AxiosResponse } from 'axios';\r\nimport md5 from 'js-md5';\r\n\r\nimport { HomeType } from './../pages/home/types';\r\n\r\nexport default ({\r\n  publicKey,\r\n  privateKey,\r\n  time,\r\n  url,\r\n}: HomeType & { url: string }): Promise<AxiosResponse<any>> => {\r\n  const {\r\n    REACT_APP_PUBLIC_KEY: PUBLIC_KEY,\r\n    REACT_APP_PRIVATE_KEY: PRIVATE_KEY,\r\n  } = process.env;\r\n\r\n  const timestamp = time || Number(new Date());\r\n  const hash = md5.create();\r\n  hash.update(\r\n    timestamp +\r\n      (privateKey || (PRIVATE_KEY as string)) +\r\n      (publicKey || (PUBLIC_KEY as string)),\r\n  );\r\n\r\n  return axios.get(url, {\r\n    baseURL: 'http://gateway.marvel.com/v1/public',\r\n    params: {\r\n      ts: timestamp,\r\n      apikey: PUBLIC_KEY,\r\n      hash: hash.hex(),\r\n    },\r\n    timeout: 10000,\r\n    method: 'get',\r\n    responseType: 'json',\r\n  });\r\n};\r\n","import { ComicDataType } from './Body/Comics/Comic/types';\r\nimport { ParamsType } from './types';\r\n\r\nexport const getUrl = (params: ParamsType) => {\r\n  let url = `/comics?limit=${params.limit}&offset=${params.offset}`;\r\n\r\n  if (params.title) {\r\n    url += `&title=${params.title}`;\r\n  }\r\n\r\n  if (params.startYear) {\r\n    url += `&startYear=${params.startYear}`;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\nexport const getFormattedComics = (results: any): Array<ComicDataType> =>\r\n  results.map((item: any) => ({\r\n    id: item.id,\r\n    title: item.title as string,\r\n    img: `${item.thumbnail.path}/portrait_uncanny.${item.thumbnail.extension}`,\r\n    printPrice: item.prices.find((price: any) => price.type === 'printPrice')\r\n      ?.price,\r\n    digitalPrice: item.prices.find(\r\n      (price: any) => price.type === 'digitalPrice',\r\n    )?.price,\r\n  }));\r\n","import React, { useEffect } from 'react';\r\n\r\nimport Header from './Header';\r\nimport Body from './Body';\r\n\r\nimport { useComics } from './hooks';\r\n\r\nimport './styles.css';\r\nimport { HomeType } from './types';\r\n\r\nconst Home = (props: HomeType): JSX.Element => {\r\n  const {\r\n    fetchComics,\r\n    fetchMoreComics,\r\n    state: { limit, offset, size, comics, total },\r\n  } = useComics(props);\r\n\r\n  useEffect(() => {\r\n    fetchComics({ limit, offset });\r\n  }, []);\r\n\r\n  const onSearchPerTitle = (text: string) => {\r\n    fetchComics({ offset, limit, title: text });\r\n  };\r\n\r\n  const onSearchPerYear = (year?: number) => {\r\n    fetchComics({ offset, limit, startYear: year });\r\n  };\r\n\r\n  const onSeeMore = () => {\r\n    fetchMoreComics();\r\n  };\r\n\r\n  return (\r\n    <main className=\"container\" data-testid=\"container\">\r\n      <Header />\r\n      <Body\r\n        onSearchPerTitle={onSearchPerTitle}\r\n        onSearchPerYear={onSearchPerYear}\r\n        onSeeMore={onSeeMore}\r\n        comics={comics}\r\n        canSeeMore={size <= total}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\n\r\nimport api from 'api';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  StateType,\r\n  fetchType,\r\n  UseComicsType,\r\n  fetchDataType,\r\n  RequestResponse,\r\n  fetchMoreType,\r\n} from './types';\r\nimport { getFormattedComics, getUrl } from './utils';\r\n\r\nexport const useComics: UseComicsType = props => {\r\n  const [state, setState] = useState<StateType>({\r\n    limit: 20,\r\n    offset: 0,\r\n    size: 0,\r\n    total: 0,\r\n    comics: [],\r\n  });\r\n\r\n  const fetchData: fetchDataType = async params => {\r\n    const url = getUrl(params);\r\n\r\n    try {\r\n      const {\r\n        data: {\r\n          data: { results, total, limit, offset },\r\n        },\r\n      } = await api({ ...params, url });\r\n\r\n      return { results, total, limit, offset } as RequestResponse;\r\n    } catch (e) {\r\n      return { ...state, results: [] };\r\n    }\r\n  };\r\n\r\n  const fetchComics: fetchType = async params => {\r\n    const { results, total, limit, offset } = await fetchData(params);\r\n\r\n    const comics = getFormattedComics(results);\r\n\r\n    const newComics =\r\n      params.startYear === state.startYear && params.title === state.title\r\n        ? [...state.comics, ...comics]\r\n        : comics;\r\n\r\n    setState(state => ({\r\n      ...state,\r\n      comics: newComics,\r\n      size: comics.length,\r\n      total,\r\n      limit,\r\n      offset,\r\n      title: params.title,\r\n      startYear: params.startYear,\r\n    }));\r\n  };\r\n\r\n  const fetchMoreComics: fetchMoreType = async () => {\r\n    fetchComics({\r\n      limit: 20,\r\n      offset: state.offset + state.limit,\r\n      title: state.title,\r\n      startYear: state.startYear,\r\n    });\r\n  };\r\n\r\n  return { fetchComics, fetchMoreComics, state };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/home';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}